@using MobellaEventsForms.Models
@using MobellaEventsForms.ViewModels
@model ScheduleConsultationRequest

@{
    Layout = "~/Views/Shared/_FormsLayout.cshtml";
    ViewBag.Title = "Schedule Consultation";
    ViewBag.Step = 3;
}

@section scripts {
    <script>
        $(document).ready(function () {
            // This is a simple *viewmodel* - JavaScript that defines the data and behavior of your UI
            function appViewModel() {
                var self = this;
                self.checkedOption = ko.observable('@GetDefaultSchedule()');

                self.Monday = ko.observable(false);
                self.Tuesday = ko.observable(false);
                self.Wednesday = ko.observable(false);
                self.Thursday = ko.observable(false);
                self.Friday = ko.observable(false);
                self.Saturday = ko.observable(false);
                self.Sunday = ko.observable(false);

                self.Weekdays = ko.computed({
                    read: function () {
                        return self.Monday() &&
                            self.Tuesday() &&
                            self.Wednesday() &&
                            self.Thursday() &&
                            self.Friday();
                    },
                    write: function (value) {
                        self.Monday(value);
                        self.Tuesday(value);
                        self.Wednesday(value);
                        self.Thursday(value);
                        self.Friday(value);
                    },
                    owner: self
                });

                self.Weekends = ko.computed({
                    read: function () {
                        return self.Saturday() &&
                            self.Sunday();
                    },
                    write: function (value) {
                        self.Saturday(value);
                        self.Sunday(value);
                    },
                    owner: self
                });
            }

            // Activates knockout.js
            ko.applyBindings(new appViewModel());
        });
    </script>
}

@section header
{
    @Html.Partial("_WizardHeader")
}

@helper GetDefaultSchedule()
{
    @((Model != null ? Model.When : Schedule.Now).ToString())
}

@helper IsChecked(DayOfWeek dayOfWeek)
{
    if (Model != null && Model.DaysOfTheWeek != null && Model.DaysOfTheWeek.Contains(dayOfWeek))
    {
        @:Checked="Checked"
    }
}

@helper IsChecked(TimeOfDay timeOfDay)
{
    if (Model != null && Model.TimesOfTheDay != null && Model.TimesOfTheDay.Contains(timeOfDay))
    {
        @:Checked="Checked"
    }
}

@helper Toggle(Schedule when, string label)
{
    @Form.Radio(Url, "When", when.ToString(), label)
}

@helper Toggle(DayOfWeek day)
{
    var dayString = day.ToString();
    <div class="day-of-week">
        @Form.Toggle("DaysOfTheWeek", dayString, dayString.Substring(0, 1), IsChecked(day))
    </div>
}

@helper Toggle(TimeOfDay time)
{
    var timeString = time.ToString();
    <div class="time-of-day">
        @Form.Toggle("TimesOfTheDay", timeString, timeString, IsChecked(time))
    </div>
}

<p class="description">Would you like to schedule your free initial consultation? We would love to get to know you better!</p>
<p data-bind="text: checkedOption"></p>

@using (Html.BeginForm("ScheduleConsultation", "Show",
    new { clientId = Request.Params["clientId"] },
    FormMethod.Post,
    new { id = "ScheduleConsultationForm" }))
{
    @Html.ValidationSummary(true)

    <div class="fieldset">
        @Toggle(Schedule.Now, "Yes, let's schedule it now!")

        <div class="toggle-pane" data-bind="visible: checkedOption() == '@Schedule.Now.ToString()'">
            @Html.LabelFor(i => i.OnDateTime)
            @Html.EditorFor(i => i.OnDateTime)
            @Html.ValidationMessageFor(i => i.OnDateTime)
        </div>
    </div>

    <div class="fieldset">
        @Toggle(Schedule.Later, "Yes, I'm available on...")

        <div class="toggle-pane" data-bind="visible: checkedOption() == '@Schedule.Later.ToString()'">
            <div class="toggle-pane-section">
                <p>Days of the Week</p>
                @foreach (var dayOfWeek in Enum.GetValues(typeof(DayOfWeek)))
                {
                    @Toggle((DayOfWeek)dayOfWeek)
                }
                <div class="days-of-week">
                    <input type="checkbox" class="toggle" id="Weekdays" data-bind="checked: Weekdays"/>
                    <label for="Weekdays">
                        <span>Weekdays</span>
                    </label>
                    <input type="checkbox" class="toggle" id="Weekends" data-bind="checked: Weekends"/>
                    <label for="Weekends">
                        <span>Weekends</span>
                    </label>
                </div>
            </div>

            <div class="toggle-pane-section">
                <p>Times of the Day</p>
                @foreach (var timeOfDay in Enum.GetValues(typeof(TimeOfDay)))
                {
                    @Toggle((TimeOfDay)timeOfDay)
                }
            </div>

            @Html.LabelFor(i => i.AdditionalPreferences)
            <textarea name="AdditionalPreferences" rows="3">@Model.AdditionalPreferences</textarea>
        </div>
    </div>

    <div class="fieldset">
        @Toggle(Schedule.Never, "No, I'm not ready yet.")
    </div>
}

@section FormButtons
{
    <input type="submit" form="ScheduleConsultationForm" value="Submit"/>
    <a type="button" href="@Url.Action("AboutUs", new {clientId = Request.Params["clientId"]})"><span>Back</span></a>
}
